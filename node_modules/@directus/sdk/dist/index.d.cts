export { authentication, memoryStorage, staticToken } from './auth/index.cjs';
export { d as AuthenticationClient, c as AuthenticationConfig, a as AuthenticationData, A as AuthenticationMode, b as AuthenticationStorage, H as HttpMethod, L as LoginOptions, g as RequestOptions, h as RequestTransformer, i as ResponseTransformer, e as RestClient, R as RestCommand, f as RestConfig, S as StaticTokenClient, l as login } from './login-M53C1LeV.cjs';
import { C as ClientOptions, D as DirectusClient } from './client-pzVdw9Ub.cjs';
export { a as ClientGlobals, F as FetchInterface, U as UrlInterface, W as WebSocketConstructor, b as WebSocketInterface } from './client-pzVdw9Ub.cjs';
export { GqlResult, GraphqlClient, GraphqlConfig, graphql } from './graphql/index.cjs';
export { EmailAuth, RefreshAuth, TokenAuth, auth, generateUid, messageCallback, pong, realtime, sleep } from './realtime/index.cjs';
export { as as AllCollections, a5 as ApplyManyToAnyFields, a6 as ApplyNestedQueryFields, a4 as ApplyQueryFields, C as CollectionMetaTranslationType, ak as CollectionType, ar as CompleteSchema, j as CoreSchema, D as DirectusActivity, i as DirectusCollection, k as DirectusDashboard, l as DirectusExtension, n as DirectusField, q as DirectusFile, r as DirectusFlow, s as DirectusFolder, t as DirectusNotification, u as DirectusOperation, v as DirectusPanel, w as DirectusPermission, x as DirectusPreset, y as DirectusRelation, z as DirectusRevision, A as DirectusRole, B as DirectusSettings, G as DirectusShare, H as DirectusUser, I as DirectusVersion, J as DirectusWebhook, E as ExtensionSchema, m as ExtensionTypes, ac as ExtractItem, ad as ExtractRelation, o as FieldMetaConditionOptionType, F as FieldMetaConditionType, p as FieldMetaTranslationType, a9 as FieldOutputMap, T as FieldsWildcard, $ as FilterOperators, at as GetCollection, au as GetCollectionName, O as HasManyToAnyRelation, P as HasNestedFields, aF as Identity, aB as IfAny, aA as IfNever, aC as IsAny, aD as IsNullable, aj as ItemType, X as LiteralFields, a2 as LogicalFilterOperators, N as ManyToAnyFields, a8 as MapFlatFields, ax as Merge, aq as MergeCoreCollection, af as MergeFields, ah as MergeObjects, ay as MergeOptional, ae as MergeRelationalFields, av as Mutable, aE as NestedPartial, Z as NestedQueryFilter, _ as NestedRelationalFilter, az as NeverToUnknown, V as PickFlatFields, U as PickRelationalFields, an as PrimitiveFields, aa as Query, ai as QueryAlias, Q as QueryDeep, K as QueryFields, M as QueryFieldsRelational, Y as QueryFilter, ab as QueryItem, ag as QuerySort, am as RegularCollections, a7 as RelationNullable, ao as RelationalFields, a0 as RelationalFilterOperators, R as RemoveEventHandler, ap as RemoveRelationships, al as SingletonCollections, S as SubscribeOptions, f as SubscriptionEvents, e as SubscriptionOptionsEvents, g as SubscriptionOutput, h as SubscriptionPayload, aw as UnpackList, W as WebSocketAuthModes, d as WebSocketClient, a as WebSocketConfig, c as WebSocketEventHandler, b as WebSocketEvents, a3 as WrapLogicalFilters, L as WrapQueryFields, a1 as WrapRelationalFilters } from './types-s9067s5a.cjs';
export { dx as AggregateRecord, dz as AggregationOptions, dA as AggregationOutput, dw as AggregationTypes, dB as AssetsQuery, C as CreateActivityOutput, d as CreateCollectionOutput, a2 as CreateContentVersionOutput, f as CreateDashboardOutput, i as CreateFieldOutput, k as CreateFileOutput, n as CreateFlowOutput, s as CreateFolderOutput, w as CreateItemOutput, z as CreateNotificationOutput, D as CreateOperationOutput, G as CreatePanelOutput, J as CreatePermissionOutput, M as CreatePresetOutput, P as CreateRelationOutput, S as CreateRoleOutput, V as CreateShareOutput, Y as CreateTranslationOutput, $ as CreateUserOutput, a5 as CreateWebhookOutput, du as DirectusTranslation, d3 as FileFormat, dy as GroupByFields, dv as GroupingFunctions, c1 as OpenApiSpecOutput, aI as ReadActivityOutput, aP as ReadCollectionOutput, bN as ReadContentVersionOutput, aS as ReadDashboardOutput, aW as ReadFieldOutput, a_ as ReadFileOutput, b1 as ReadFlowOutput, b4 as ReadFolderOutput, b7 as ReadItemOutput, ba as ReadNotificationOutput, bd as ReadOperationOutput, bg as ReadPanelOutput, bj as ReadPermissionOutput, bm as ReadPresetOutput, R as ReadProviderOutput, bp as ReadRelationOutput, bt as ReadRevisionOutput, bw as ReadRoleOutput, bz as ReadSettingOutput, bB as ReadShareOutput, bE as ReadSingletonOutput, bG as ReadTranslationOutput, bJ as ReadUserOutput, bQ as ReadWebhookOutput, bU as SchemaDiffOutput, bW as SchemaSnapshotOutput, bZ as ServerHealthOutput, b$ as ServerInfoOutput, c4 as UpdateActivityOutput, c6 as UpdateCollectionOutput, cY as UpdateContentVersionOutput, c8 as UpdateDashboardOutput, cc as UpdateFieldOutput, ce as UpdateFileOutput, ch as UpdateFlowOutput, ck as UpdateFolderOutput, cn as UpdateItemOutput, cq as UpdateNotificationOutput, ct as UpdateOperationOutput, cw as UpdatePanelOutput, cz as UpdatePermissionOutput, cC as UpdatePresetOutput, cF as UpdateRelationOutput, cH as UpdateRoleOutput, cK as UpdateSettingOutput, cM as UpdateShareOutput, cP as UpdateSingletonOutput, cR as UpdateTranslationOutput, cU as UpdateUserOutput, c$ as UpdateWebhookOutput, df as acceptUserInvite, aL as aggregate, da as authenticateShare, d2 as clearCache, dk as compareContentVersion, e as createCollection, c as createComment, a4 as createContentVersion, a3 as createContentVersions, h as createDashboard, g as createDashboards, j as createField, q as createFlow, o as createFlows, v as createFolder, t as createFolders, y as createItem, x as createItems, B as createNotification, A as createNotifications, F as createOperation, E as createOperations, I as createPanel, H as createPanels, L as createPermission, K as createPermissions, O as createPreset, N as createPresets, Q as createRelation, U as createRole, T as createRoles, X as createShare, W as createShares, _ as createTranslation, Z as createTranslations, a1 as createUser, a0 as createUsers, a7 as createWebhook, a6 as createWebhooks, a9 as deleteCollection, a8 as deleteComment, aF as deleteContentVersion, aE as deleteContentVersions, ab as deleteDashboard, aa as deleteDashboards, ac as deleteField, ae as deleteFile, ad as deleteFiles, ag as deleteFlow, af as deleteFlows, ai as deleteFolder, ah as deleteFolders, ak as deleteItem, aj as deleteItems, am as deleteNotification, al as deleteNotifications, ao as deleteOperation, an as deleteOperations, aq as deletePanel, ap as deletePanels, as as deletePermission, ar as deletePermissions, au as deletePreset, at as deletePresets, av as deleteRelation, ax as deleteRole, aw as deleteRoles, az as deleteShare, ay as deleteShares, aB as deleteTranslation, aA as deleteTranslations, aD as deleteUser, aC as deleteUsers, aH as deleteWebhook, aG as deleteWebhooks, di as disableTwoFactor, dh as enableTwoFactor, d6 as generateHash, dg as generateTwoFactorSecret, m as importFile, db as inviteShare, de as inviteUser, l as logout, p as passwordRequest, a as passwordReset, dl as promoteContentVersion, dr as queryToParams, aJ as readActivities, aK as readActivity, aO as readAssetArrayBuffer, aN as readAssetBlob, aM as readAssetRaw, aR as readCollection, aQ as readCollections, bP as readContentVersion, bO as readContentVersions, aU as readDashboard, aT as readDashboards, aV as readExtensions, aZ as readField, aX as readFields, aY as readFieldsByCollection, b0 as readFile, a$ as readFiles, b3 as readFlow, b2 as readFlows, b6 as readFolder, b5 as readFolders, bY as readGraphqlSdl, b9 as readItem, b8 as readItems, bM as readMe, bc as readNotification, bb as readNotifications, c2 as readOpenApiSpec, bf as readOperation, be as readOperations, bi as readPanel, bh as readPanels, bl as readPermission, bk as readPermissions, bo as readPreset, bn as readPresets, r as readProviders, bs as readRelation, br as readRelationByCollection, bq as readRelations, bv as readRevision, bu as readRevisions, by as readRole, bx as readRoles, bA as readSettings, bD as readShare, dc as readShareInfo, bC as readShares, bF as readSingleton, bI as readTranslation, bH as readTranslations, bL as readUser, bK as readUsers, bS as readWebhook, bR as readWebhooks, b as refresh, dm as rest, dj as saveToContentVersion, bT as schemaApply, bV as schemaDiff, bX as schemaSnapshot, b_ as serverHealth, c0 as serverInfo, c3 as serverPing, dt as throwIfCoreCollection, ds as throwIfEmpty, d5 as triggerFlow, d9 as triggerOperation, c7 as updateCollection, c5 as updateComment, c_ as updateContentVersion, cZ as updateContentVersions, ca as updateDashboard, c9 as updateDashboards, cb as updateExtension, cd as updateField, cg as updateFile, cf as updateFiles, cj as updateFlow, ci as updateFlows, cm as updateFolder, cl as updateFolders, cp as updateItem, co as updateItems, cX as updateMe, cs as updateNotification, cr as updateNotifications, cv as updateOperation, cu as updateOperations, cy as updatePanel, cx as updatePanels, cB as updatePermission, cA as updatePermissions, cE as updatePreset, cD as updatePresets, cG as updateRelation, cJ as updateRole, cI as updateRoles, cL as updateSettings, cO as updateShare, cN as updateShares, cQ as updateSingleton, cT as updateTranslation, cS as updateTranslations, cW as updateUser, cV as updateUsers, d1 as updateWebhook, d0 as updateWebhooks, u as uploadFiles, dd as utilitySort, d4 as utilsExport, d8 as utilsImport, d7 as verifyHash, dn as withOptions, dp as withSearch, dq as withToken } from './index-n6qApBfD.cjs';

/**
 * Creates a client to communicate with a Directus app.
 *
 * @param url The URL to the Directus app.
 * @param config The optional configuration.
 *
 * @returns A Directus client.
 */
declare const createDirectus: <Schema extends object = any>(url: string, options?: ClientOptions) => DirectusClient<Schema>;

export { ClientOptions, DirectusClient, createDirectus };
